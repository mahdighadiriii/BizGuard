[tool.poetry]
name = "bizguard"
version = "0.1.0"
description = ""
authors = ["Mahdi Ghadiri <mahdighadiriafzal@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.3"
django = "4.2.6"
djangorestframework = "3.15.1"
pyjwt = {version = "2.9.0", extras = ["crypto"]}
psycopg2-binary = "2.9.9"
python-magic = "0.4.27"
gunicorn = "23.0.0"
uvicorn = "0.30.6"
django-cors-headers = "4.5.0"
djangorestframework-simplejwt = "5.3.1"
django-filter = "24.3"
python-decouple = "3.8"
drf-spectacular = "0.28.0"
pika = "^1.3.2"
cairosvg = "^2.7.1"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
mypy = "^1.10.0"
ruff = "^0.6.8"
django-debug-toolbar = "4.3"
black = "^24.10.0"
flake8 = "^7.1.1"
markdown = "^3.7"
cairosvg = "^2.7.1"


[tool.mypy]
python_version = "3.12"
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
]
disallow_subclassing_any = false
warn_redundant_casts = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
warn_return_any = false
strict_optional = true
ignore_missing_imports = true
show_error_codes = true
explicit_package_bases = true
warn_no_return = false
strict = true
disallow_incomplete_defs = false
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*",
    "manage.py"
]
# Same as Django: https://github.com/cookiecutter/cookiecutter-django/issues/4792.
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "S105", # TODO: Passwords and Secret keys should be environment variables
  "E501",
  "T201",
  "COM812",
  "ISC001",
  "DJ001",
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
exclude = ["manage.py"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
exclude = ["manage.py"]

[tool.ruff.lint.isort]
force-single-line = false
known-local-folder = ["apps", "utils"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
