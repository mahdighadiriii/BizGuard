[tool.poetry]
name = "bizguard"
version = "0.1.0"
description = "A monitoring and security platform for small businesses using a Telegram bot"
authors = ["Mahdi Ghadiri <mahdighadiriafzal@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0"
djangorestframework = "^3.15.2"
pyjwt = {version = "^2.9.0", extras = ["crypto"]}
psycopg2-binary = "^2.9.9"
python-decouple = "^3.8"
djangorestframework-simplejwt = "^5.3.1"
django-filter = "^24.3"
drf-spectacular = "^0.27.2"
python-telegram-bot = "^21.4"
pika = "^1.3.2"
redis = "^5.0.8"
celery = "^5.4.0"
django-observability = "^0.1.0"
requests = "^2.32.3"
gunicorn = "^23.0.0"
uvicorn = "^0.30.6"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
mypy = "^1.11.2"
ruff = "^0.6.8"
django-debug-toolbar = "^4.4.6"
black = "^24.8.0"
flake8 = "^7.1.1"
pytest = "^8.3.3"
pytest-django = "^4.9.0"
pytest-cov = "^5.0.0"

[tool.mypy]
python_version = "3.12"
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
]
disallow_subclassing_any = false
warn_redundant_casts = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
warn_return_any = false
strict_optional = true
ignore_missing_imports = true
show_error_codes = true
explicit_package_bases = true
warn_no_return = false
strict = true
disallow_incomplete_defs = false
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "bizguard.src.core.config.settings"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*",
    "manage.py"
]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
  "F", "E", "W", "C90", "I", "N", "UP", "YTT", "ASYNC", "S", "BLE", "B", "A",
  "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP",
  "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID",
  "TCH", "INT", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "PERF", "RUF"
]
ignore = [
  "S101", "RUF012", "SIM102", "S105", "E501", "T201", "COM812", "ISC001", "DJ001"
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false
known-local-folder = ["src", "core", "services", "utils"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.bandit]
skips = ["B101"]
targets = ["./bizguard/src"]

[tool.prettier]
proseWrap = "always"
tabWidth = 2

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
