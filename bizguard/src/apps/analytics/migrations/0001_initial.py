# Generated by Django 4.2.6 on 2025-07-19 08:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('monitoring', '0002_uptimecheck_description_uptimestats_description_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('metric_type', models.CharField(choices=[('response_time', 'Response Time'), ('throughput', 'Throughput'), ('error_rate', 'Error Rate'), ('availability', 'Availability')], max_length=55)),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(default=dict)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='monitoring.website')),
            ],
            options={
                'db_table': 'performance_metrics',
                'indexes': [models.Index(fields=['website', 'metric_type'], name='performance_website_a39b69_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnomalyDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('anomaly_types', models.CharField(choices=[('Response Time Anomaly', 'Response Time'), ('Traffic Pattern Anomaly', 'Traffic Pattern'), ('Error Spike', 'Error Spike'), ('Security Threat', 'Security Threat')], max_length=55)),
                ('confidence_score', models.FloatField()),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('anomaly_data', models.JSONField(default=dict)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='monitoring.website')),
            ],
            options={
                'db_table': 'anomaly_detections',
                'indexes': [models.Index(fields=['website', 'detected_at'], name='anomaly_det_website_1c589f_idx'), models.Index(fields=['anomaly_types', 'confidence_score'], name='anomaly_det_anomaly_73f2e5_idx')],
            },
        ),
    ]
