# Generated by Django 4.2.6 on 2025-07-18 16:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Website',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('deleted', 'Deleted')], max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=95)),
                ('url', models.URLField(validators=[django.core.validators.URLValidator()])),
                ('check_interval', models.IntegerField(default=300)),
                ('timeout', models.IntegerField(default=30)),
                ('check_ssl', models.BooleanField(default=True)),
                ('check_performance', models.BooleanField(default=True)),
                ('check_security', models.BooleanField(default=True)),
                ('last_check', models.DateTimeField(blank=True, null=True)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='website', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'website',
            },
        ),
        migrations.CreateModel(
            name='UptimeStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('uptime_percentage', models.FloatField()),
                ('total_checks', models.IntegerField()),
                ('successful_checks', models.IntegerField()),
                ('average_response_time', models.FloatField()),
                ('max_response_time', models.FloatField()),
                ('min_response_time', models.FloatField()),
                ('downtime_duration', models.IntegerField(default=0)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='monitoring.website')),
            ],
            options={
                'db_table': 'uptime_stats',
            },
        ),
        migrations.CreateModel(
            name='UptimeCheck',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uptime', models.CharField(choices=[('up', 'Up'), ('down', 'Down'), ('error', 'Error'), ('timeout', 'Timeout')], max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('headers', models.JSONField(default=dict)),
                ('content_length', models.IntegerField(blank=True, null=True)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uptime_checks', to='monitoring.website')),
            ],
            options={
                'db_table': 'uptime_checks',
            },
        ),
        migrations.AddIndex(
            model_name='website',
            index=models.Index(fields=['user', 'status'], name='website_user_id_1c5543_idx'),
        ),
        migrations.AddIndex(
            model_name='website',
            index=models.Index(fields=['status', 'last_check'], name='website_status_f9439e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='website',
            unique_together={('user', 'url')},
        ),
        migrations.AddIndex(
            model_name='uptimestats',
            index=models.Index(fields=['website', 'date'], name='uptime_stat_website_fa6f1d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='uptimestats',
            unique_together={('website', 'date')},
        ),
        migrations.AddIndex(
            model_name='uptimecheck',
            index=models.Index(fields=['website', 'checked_at'], name='uptime_chec_website_cb72bb_idx'),
        ),
        migrations.AddIndex(
            model_name='uptimecheck',
            index=models.Index(fields=['uptime', 'checked_at'], name='uptime_chec_uptime_920089_idx'),
        ),
    ]
